{"ast":null,"code":"var _jsxFileName = \"/Users/tpl1219_7/Documents/techtonica-assignments/Tweeter/tweeter/src/App.js\";\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMessageChange = event => {\n      this.setState({\n        message: event.target.value\n      });\n    };\n\n    this.state = {\n      message: \"\"\n    };\n  }\n\n  render() {\n    const message = this.state.message,\n          maxCharacterCount = 100,\n          currentCharacterCount = message.length; // characterMonitor =\n    // currentCharacterCount === maxCharacterCount\n    //     ? 'Over Character Limit'\n    //     : 'Character Count is Good to Go!';\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Tweeter\"), React.createElement(\"label\", {\n      for: \"entryform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Entry Form\"), React.createElement(\"form\", {\n      name: \"entryform\",\n      id: \"entry-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"usernames\",\n      id: \"usernames\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"_bot1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Bot1\"), React.createElement(\"option\", {\n      value: \"_bot2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Bot2\"), React.createElement(\"option\", {\n      value: \"_bot3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Bot3\"), React.createElement(\"option\", {\n      value: \"_bot4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Bot4\"), React.createElement(\"option\", {\n      value: \"_bot5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Bot5\")), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      value: message,\n      onChange: this.handleMessageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Current Character Count: \", currentCharacterCount, \";\"), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tpl1219_7/Documents/techtonica-assignments/Tweeter/tweeter/src/App.js"],"names":["React","Component","App","constructor","props","handleMessageChange","event","setState","message","target","value","state","render","maxCharacterCount","currentCharacterCount","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,mBALmB,GAKGC,KAAK,IAAI;AAC7B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAxB,OAAd;AACD,KAPkB;;AAEjB,SAAKC,KAAL,GAAa;AAAEH,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAMDI,EAAAA,MAAM,GAAG;AACP,UAAMJ,OAAO,GAAG,KAAKG,KAAL,CAAWH,OAA3B;AAAA,UACEK,iBAAiB,GAAG,GADtB;AAAA,UAEEC,qBAAqB,GAAGN,OAAO,CAACO,MAFlC,CADO,CAKP;AACA;AACA;AACA;;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAGE;AAAO,MAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAM,MAAA,IAAI,EAAC,WAAX;AAAuB,MAAA,EAAE,EAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,EAAE,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAKE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,EAOY,GAPZ,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AACE,MAAA,KAAK,EAAEP,OADT;AAEE,MAAA,QAAQ,EAAE,KAAKH,mBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAgCS,qBAAhC,MAdF,EAeE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CAJF,CADF;AAyBD;;AA7CyB;;AAgD5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: \"\" };\n  }\n\n  handleMessageChange = event => {\n    this.setState({ message: event.target.value });\n  };\n\n  render() {\n    const message = this.state.message,\n      maxCharacterCount = 100,\n      currentCharacterCount = message.length;\n\n    // characterMonitor =\n    // currentCharacterCount === maxCharacterCount\n    //     ? 'Over Character Limit'\n    //     : 'Character Count is Good to Go!';\n\n    return (\n      <div>\n        <h1>Tweeter</h1>\n\n        <label for='entryform'>Entry Form</label>\n        <form name='entryform' id='entry-form'>\n          <select name='usernames' id='usernames'>\n            <option value='_bot1'>Bot1</option>\n            <option value='_bot2'>Bot2</option>\n            <option value='_bot3'>Bot3</option>\n            <option value='_bot4'>Bot4</option>\n            <option value='_bot5'>Bot5</option>\n          </select>{\" \"}\n          <br />\n          <textarea\n            value={message}\n            onChange={this.handleMessageChange}\n          ></textarea>\n          <br />\n          <span>Current Character Count: {currentCharacterCount};</span>\n          <input type='submit' value='Submit'></input>\n          <br />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}